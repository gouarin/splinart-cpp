name: "CI"

on:
  workflow_dispatch:
  pull_request:
    paths-ignore:
      - "doc/**"

jobs:
  # pre-commit:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v3
  #     - uses: actions/setup-python@v3
  #     - uses: pre-commit/action@v3.0.0

  # cppcheck:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v3

  #     - uses: prefix-dev/setup-pixi@v0.4.1
  #       with:
  #         pixi-version: v0.9.1
  #         cache: true

  #     - name: cppcheck installation
  #       run: pixi add cppcheck

  #     - name: Configure
  #       run: |
  #         cmake -S . -B .build -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DCMAKE_BUILD_TYPE=Debug -DBUILD_EXAMPLES=ON
  #         cppcheck --enable=all -q --project=.build/compile_commands.json --suppressions-list=.cppcheck 2> cppcheck_err.txt
  #       shell: pixi run bash {0}

  #     - name: Check for errors
  #       run: |
  #         if [[ -s cppcheck_err.txt ]];
  #         then
  #           cat cppcheck_err.txt
  #           exit -1
  #         fi

  tests:
    runs-on: ${{ matrix.os }}
    # needs: [pre-commit, cppcheck]
    strategy:
      fail-fast: false
      matrix:
        os:
          # - ubuntu-22.04
          # - macos-12
          - windows-latest
    steps:
      - uses: actions/checkout@v3

      - uses: prefix-dev/setup-pixi@v0.4.1
        with:
          pixi-version: v0.9.1
          cache: true

      # - name: build splinart
      #   shell: pixi run bash {0}
      #   run: |
      #     cmake -G Ninja -S . -B .build -DCMAKE_BUILD_TYPE=Release -DBUILD_TESTS=ON
      #     cmake --build .build --config Release

      # - name: Run tests
      #   shell: pixi run bash {0}
      #   run: |
      #     .build/tests/test_splinart

      - name: Run tests
        run: pixi run test
          .build/tests/test_splinart
